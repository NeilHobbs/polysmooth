regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0.9)
mean((relative.contribution.after.selection*normal.distribution)/(relative.contribution.before.selection))
#step 2: calculate the density after insecticide selection
relative.contribution.after.selection =  calculate_density_after_selection(insecticide.exposure = 1,
vector.length = 10000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
mean((relative.contribution.after.selection*normal.distribution)/(relative.contribution.before.selection))
#step 2: calculate the density after insecticide selection
relative.contribution.after.selection =  calculate_density_after_selection(insecticide.exposure = 1,
vector.length = 10000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0.2)
mean((relative.contribution.after.selection*normal.distribution)/(relative.contribution.before.selection))
#step 2: calculate the density after insecticide selection
relative.contribution.after.selection =  calculate_density_after_selection(insecticide.exposure = 1,
vector.length = 10000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0.1)
mean((relative.contribution.after.selection*normal.distribution)/(relative.contribution.before.selection))
#step 1:create the Normal Distribution of Polygenic Resistance Values
normal.distribution = create_normal_distribution(vector.length = 10000,
trait.mean = 10,
standard.deviation = 10)
#step 2:get the probability densities
relative.contribution.before.selection =  calculate_density_of_trait_values(vector.length = 10000,
trait.mean = 10,
standard.deviation = 10)
#step 1:create the Normal Distribution of Polygenic Resistance Values
normal.distribution = create_normal_distribution(vector.length = 10000,
trait.mean = 10,
standard.deviation = 10)
#step 2:get the probability densities
relative.contribution.before.selection =  calculate_density_of_trait_values(vector.length = 10000,
trait.mean = 10,
standard.deviation = 10)
#step 3: convert the polygenic scores to bioassay survival:
bioassay.survivals = convert_resistance_score_to_bioassay_survival(maximum.bioassay.survival.proportion = 1,
trait.mean = normal.distribution,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900)
#step 4: convert bioassay survival to field survival:
field.survivals = convert_bioassay_survival_to_field_survival(bioassay.survival = bioassay.survivals,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
#step 5:calculate the change in probability densities
relative.contribution.after.selection = relative.contribution.before.selection * field.survivals * insecticide.exposure
#step 5:calculate the change in probability densities
relative.contribution.after.selection = relative.contribution.before.selection * field.survivals * 1
library(devtools)
load_all()
library(testthat)
library(usethis)
use_test("relative.contributions.before.selection")
wrapper_total_population_size(standard.deviation = 10,
vector.length = 1000)
wrapper_total_population_size(standard.deviation = 10,
vector.length = 10000)
wrapper_total_population_size(standard.deviation = 100,
vector.length = 10000)
wrapper_total_population_size(standard.deviation = 1000,
vector.length = 10000)
wrapper_female_insecticide_selection_differential = function(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
total.female.population.size = get_female_total_population_size(total.population.size = wrapper_total_population_size(standard.deviation = 10,
vector.length = 1000))
female.population.size.unexposed =  calculate_female_population_size_unexposed(total.female.population.size = total.female.population.size,
female.insecticide.exposure = 1)
relative.female.contribution.after.selection =  calculate_female_density_after_selection(female.insecticide.exposure = 1,
vector.length = 1000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
relative.female.contribution.after.selection =  calculate_female_density_after_selection(female.insecticide.exposure = 1,
vector.length = 10000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
total.female.population.size = get_female_total_population_size(total.population.size = wrapper_total_population_size(standard.deviation = 10,
vector.length = 10000))
female.population.size.unexposed =  calculate_female_population_size_unexposed(total.female.population.size = total.female.population.size,
female.insecticide.exposure = 1)
relative.female.contribution.after.selection =  calculate_female_density_after_selection(female.insecticide.exposure = 1,
vector.length = 10000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
#calculate the mean trait value of the exposed survivors
female.trait.mean.exposed.survivors = calculate_female_trait_mean_exposed_survivors(relative.female.contribution.after.selection = relative.female.contribution.after.selection,
trait.mean = intervention.before.selection,
vector.length = vector.length,
standard.deviation = standard.deviation)
total.female.population.size = get_female_total_population_size(total.population.size = wrapper_total_population_size(standard.deviation = 10,
vector.length = 10000))
female.population.size.unexposed =  calculate_female_population_size_unexposed(total.female.population.size = total.female.population.size,
female.insecticide.exposure = 1)
relative.female.contribution.after.selection =  calculate_female_density_after_selection(female.insecticide.exposure = 1,
vector.length = 10000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
#calculate the mean trait value of the exposed survivors
female.trait.mean.exposed.survivors = calculate_female_trait_mean_exposed_survivors(relative.female.contribution.after.selection = relative.female.contribution.after.selection,
trait.mean = 10,
vector.length = 10000,
standard.deviation = 10)
load_all()
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
load_all()
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
total.female.population.size = get_female_total_population_size(total.population.size = wrapper_total_population_size(standard.deviation = 10,
vector.length = 1000))
total.female.population.size = get_female_total_population_size(total.population.size = wrapper_total_population_size(standard.deviation = 10,
vector.length = 1000))
female.population.size.unexposed =  calculate_female_population_size_unexposed(total.female.population.size = total.female.population.size,
female.insecticide.exposure = 1)
relative.female.contributions.after.selection =  calculate_female_density_after_selection(female.insecticide.exposure = 1,
vector.length = 1000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
load_all()
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 0.1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1.2)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 20)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
use_test("wrapper_female_insecticide_selection_differential")
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 10000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 100000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 10000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 100000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 0,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 1,
regression.intercept = 0,
current.insecticide.efficacy = 1)
load_all()
wrapper_male_insecticide_selection_differential(intervention.before.selection = 10,
male.insecticide.exposure = 1,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
use_test("wrapper_male_insecticide_selection_differential")
wrapper_male_insecticide_selection_differential(intervention.before.selection = 10,
male.insecticide.exposure = 1,
female.insecticide.exposure = 0,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
wrapper_male_insecticide_selection_differential(intervention.before.selection = 10,
male.insecticide.exposure = 1,
female.insecticide.exposure = 0,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
wrapper_male_insecticide_selection_differential(intervention.before.selection = 10,
male.insecticide.exposure = 0,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 1)
wrapper_male_insecticide_selection_differential(intervention.before.selection = 10,
male.insecticide.exposure = 1,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0)
wrapper_female_insecticide_selection_differential(intervention.before.selection = 10,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0)
wrapper_male_insecticide_selection_differential(intervention.before.selection = 10,
male.insecticide.exposure = 1,
female.insecticide.exposure = 1,
standard.deviation = 10,
vector.length = 1000,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0)
#Get the total reltative population size of the male mosquito population in the intervention site.
total.male.population.size = get_male_total_population_size(total.population.size = wrapper_total_population_size(standard.deviation = 10,
vector.length = 1000))
#Calculate the relative population size that is not exposed to the insecticide.
male.population.size.unexposed =  calculate_male_population_size_unexposed(total.male.population.size = total.male.population.size,
male.insecticide.exposure = 1,
female.insecticide.exposure = 1)
#Get the total reltative population size of the male mosquito population in the intervention site.
total.male.population.size = get_male_total_population_size(total.population.size = wrapper_total_population_size(standard.deviation = 10,
vector.length = 1000))
#Calculate the relative population size that is not exposed to the insecticide.
male.population.size.unexposed =  calculate_male_population_size_unexposed(total.male.population.size = total.male.population.size,
male.insecticide.exposure = 1,
female.insecticide.exposure = 1)
#Calculate the relative contributions of the mosquitoes exposed and surviving the insecticide exposure [returns a vector of values length: vector.length]
relative.male.contribution.after.selection =  calculate_male_density_after_selection(female.insecticide.exposure = 1,
male.insecticide.exposure = 1,
vector.length = 1000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0)
#calculate the mean trait value of the exposed survivors
male.trait.mean.exposed.survivors = calculate_male_trait_mean_exposed_survivors(vector.length = 1000,
trait.mean = 10,
standard.deviation = 10,
maximum.bioassay.survival.proportion = 1,
michaelis.menten.slope = 1,
half.population.bioassay.survival.resistance = 900,
regression.coefficient = 0.48,
regression.intercept = 0.15,
current.insecticide.efficacy = 0,
female.insecticide.exposure = 1,
male.insecticide.exposure = 1)
#Calculate the relative population size of male exposed survivors
male.population.size.exposed.survivors = calculate_male_population_size_exposed_survivors(relative.male.contributions.after.selection = relative.male.contribution.after.selection)
#Calculate the overall relative population size after insecticide selection
male.population.size.after.selection = calculate_male_population_size_after_selection(male.population.size.exposed.survivors = male.population.size.exposed.survivors,
male.population.size.unexposed = male.population.size.unexposed)
#Calculate the trait mean for males after insecticide selection
male.trait.mean.after.selection = calculate_male_trait_mean_post_selection(male.population.size.exposed.survivors = male.population.size.exposed.survivors,
male.trait.mean.exposed.survivors = male.trait.mean.exposed.survivors,
male.population.size.unexposed = male.population.size.unexposed,
male.trait.mean = 10,
male.population.size.after.selection = male.population.size.after.selection)
#Finally get the insecticide selection differential
male.insecticide.selection.differential = calculate_male_insecticide_selection_differential(male.trait.mean.after.selection = male.trait.mean.after.selection,
male.trait.mean = 10)
#Prevent NA occurring
male.insecticide.selection.differential = ifelse(is.na(male.insecticide.selection.differential),
yes = 0,
no = male.insecticide.selection.differential)
#Return the male insecticide selection differential
return(male.insecticide.selection.differential)
#Finally get the insecticide selection differential
male.insecticide.selection.differential = calculate_male_insecticide_selection_differential(male.trait.mean.after.selection = male.trait.mean.after.selection,
male.trait.mean = 10)
load_all()
wrapper_female_fitness_selection_differential(female.trait.mean = 10,
female.fitness.cost = 1)
wrapper_female_fitness_selection_differential(female.trait.mean = 10,
female.fitness.cost = 0.5)
wrapper_female_fitness_selection_differential(female.trait.mean = 10,
female.fitness.cost = 0.5)
wrapper_female_fitness_selection_differential(female.trait.mean = 10,
female.fitness.cost = 1)
wrapper_female_fitness_selection_differential(female.trait.mean = 10,
female.fitness.cost = 2)
wrapper_female_fitness_selection_differential(female.trait.mean = 10,
female.fitness.cost = 10)
use_test("wrapper_female_fitness_selection_differential")
use_test("wrapper_male_fitness_selection_differential")
library(devtools)
load_all()
-rm -f .git/index.lock
